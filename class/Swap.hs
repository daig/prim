{-# language CPP,UndecidableSuperClasses #-}
module Swap where
import Bits

-- TODO change name of atomic swap

type Swap ∷ ∀ {ra} {rb}. T ra → T rb → TC
class Swap b a ⇒ Swap a b where swap ∷ a → b

#define INST_SWAP2(X,Y)\
instance Swap (# (x ∷ X), (y ∷ Y) #) (# y, x #) where {swap (# i, j #) = (# j, i #)};\
instance Swap (# (y ∷ Y), (x ∷ X) #) (# x, y #) where {swap (# i, j #) = (# j, i #)}

#define INST_SWAP(X)\
instance Swap (# (##) | (x ∷ X) #) (# x | (##) #) where { \
  swap x = case unsafeCoerce# x of (# tag, (y ∷ x) #) → unsafeCoerce# (# xor 0b11# tag, y #)} ;\
instance Swap (# (x ∷ X) | (##) #) (# (##) | x #) where {\
  swap x = case unsafeCoerce# x of (# tag, (y ∷ x) #) → unsafeCoerce# (# xor 0b11# tag, y #) } ;\
instance Swap (# (x ∷ X) | x #) (# x | x #) where {\
  swap x = case unsafeCoerce# x of (# tag, (y ∷ x) #) → unsafeCoerce# (# xor 0b11# tag, y #) } ;\

INST_SWAP(T_I)
INST_SWAP2(T_I,T_I1)
INST_SWAP2(T_I,T_I2)
INST_SWAP2(T_I,T_I4)
INST_SWAP2(T_I,T_I8)
INST_SWAP2(T_I,T_U)
INST_SWAP2(T_I,T_U1)
INST_SWAP2(T_I,T_U2)
INST_SWAP2(T_I,T_U4)
INST_SWAP2(T_I,T_U8)
INST_SWAP2(T_I,T_F4)
INST_SWAP2(T_I,T_F8)
INST_SWAP2(T_I,T0)
INST_SWAP2(T_I,★)
INST_SWAP2(T_I,T_P)
INST_SWAP2(T_I,T_A)

INST_SWAP(T_I1)
INST_SWAP2(T_I1,T_I2)
INST_SWAP2(T_I1,T_I4)
INST_SWAP2(T_I1,T_I8)
INST_SWAP2(T_I1,T_U)
INST_SWAP2(T_I1,T_U1)
INST_SWAP2(T_I1,T_U2)
INST_SWAP2(T_I1,T_U4)
INST_SWAP2(T_I1,T_U8)
INST_SWAP2(T_I1,T_F4)
INST_SWAP2(T_I1,T_F8)
INST_SWAP2(T_I1,T0)
INST_SWAP2(T_I1,★)
INST_SWAP2(T_I1,T_P)
INST_SWAP2(T_I1,T_A)

INST_SWAP(T_I2)
INST_SWAP2(T_I2,T_I4)
INST_SWAP2(T_I2,T_I8)
INST_SWAP2(T_I2,T_U)
INST_SWAP2(T_I2,T_U1)
INST_SWAP2(T_I2,T_U2)
INST_SWAP2(T_I2,T_U4)
INST_SWAP2(T_I2,T_U8)
INST_SWAP2(T_I2,T_F4)
INST_SWAP2(T_I2,T_F8)
INST_SWAP2(T_I2,T0)
INST_SWAP2(T_I2,★)
INST_SWAP2(T_I2,T_P)
INST_SWAP2(T_I2,T_A)

INST_SWAP(T_I4)
INST_SWAP2(T_I4,T_I8)
INST_SWAP2(T_I4,T_U)
INST_SWAP2(T_I4,T_U1)
INST_SWAP2(T_I4,T_U2)
INST_SWAP2(T_I4,T_U4)
INST_SWAP2(T_I4,T_U8)
INST_SWAP2(T_I4,T_F4)
INST_SWAP2(T_I4,T_F8)
INST_SWAP2(T_I4,T0)
INST_SWAP2(T_I4,★)
INST_SWAP2(T_I4,T_P)
INST_SWAP2(T_I4,T_A)

INST_SWAP(T_I8)
INST_SWAP2(T_I8,T_U)
INST_SWAP2(T_I8,T_U1)
INST_SWAP2(T_I8,T_U2)
INST_SWAP2(T_I8,T_U4)
INST_SWAP2(T_I8,T_U8)
INST_SWAP2(T_I8,T_F4)
INST_SWAP2(T_I8,T_F8)
INST_SWAP2(T_I8,T0)
INST_SWAP2(T_I8,★)
INST_SWAP2(T_I8,T_P)
INST_SWAP2(T_I8,T_A)

INST_SWAP(T_U)
INST_SWAP2(T_U,T_U1)
INST_SWAP2(T_U,T_U2)
INST_SWAP2(T_U,T_U4)
INST_SWAP2(T_U,T_U8)
INST_SWAP2(T_U,T_F4)
INST_SWAP2(T_U,T_F8)
INST_SWAP2(T_U,T0)
INST_SWAP2(T_U,★)
INST_SWAP2(T_U,T_P)
INST_SWAP2(T_U,T_A)

INST_SWAP(T_U1)
INST_SWAP2(T_U1,T_U2)
INST_SWAP2(T_U1,T_U4)
INST_SWAP2(T_U1,T_U8)
INST_SWAP2(T_U1,T_F4)
INST_SWAP2(T_U1,T_F8)
INST_SWAP2(T_U1,T0)
INST_SWAP2(T_U1,★)
INST_SWAP2(T_U1,T_P)
INST_SWAP2(T_U1,T_A)

INST_SWAP(T_U2)
INST_SWAP2(T_U2,T_U4)
INST_SWAP2(T_U2,T_U8)
INST_SWAP2(T_U2,T_F4)
INST_SWAP2(T_U2,T_F8)
INST_SWAP2(T_U2,T0)
INST_SWAP2(T_U2,★)
INST_SWAP2(T_U2,T_P)
INST_SWAP2(T_U2,T_A)

INST_SWAP(T_U4)
INST_SWAP2(T_U4,T_U8)
INST_SWAP2(T_U4,T_F4)
INST_SWAP2(T_U4,T_F8)
INST_SWAP2(T_U4,T0)
INST_SWAP2(T_U4,★)
INST_SWAP2(T_U4,T_P)
INST_SWAP2(T_U4,T_A)

INST_SWAP(T_U8)
INST_SWAP2(T_U8,T_F4)
INST_SWAP2(T_U8,T_F8)
INST_SWAP2(T_U8,T0)
INST_SWAP2(T_U8,★)
INST_SWAP2(T_U8,T_P)
INST_SWAP2(T_U8,T_A)

INST_SWAP(T_F4)
INST_SWAP2(T_F4,T_F8)
INST_SWAP2(T_F4,T0)
INST_SWAP2(T_F4,★)
INST_SWAP2(T_F4,T_P)
INST_SWAP2(T_F4,T_A)

INST_SWAP(T_F8)
INST_SWAP2(T_F8,T0)
INST_SWAP2(T_F8,★)
INST_SWAP2(T_F8,T_P)
INST_SWAP2(T_F8,T_A)

INST_SWAP(T0)
INST_SWAP2(T0,★)
INST_SWAP2(T0,T_P)
INST_SWAP2(T0,T_A)

INST_SWAP(★)
INST_SWAP2(★,T_P)
INST_SWAP2(★,T_A)

INST_SWAP(T_P)
INST_SWAP2(T_P,T_A)

INST_SWAP(T_A)

