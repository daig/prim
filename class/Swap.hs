{-# language CPP,UndecidableSuperClasses #-}
module Swap where
import Bits

type Swap ∷ ∀ {ra} {rb}. T ra → T rb → C
class Swap b a ⇒ Swap a b where swap ∷ a → b

#define INST_SWAP2(X,Y)\
instance Swap (# (x ∷ K X), (y ∷ K Y) #) (# y, x #) where {swap (# i, j #) = (# j, i #)};\
instance Swap (# (y ∷ K Y), (x ∷ K X) #) (# x, y #) where {swap (# i, j #) = (# j, i #)}

#define INST_SWAP(X)\
instance Swap (# (##) | (x ∷ K X) #) (# x | (##) #) where { \
  swap x = case unsafeCoerce# x of (# tag, (y ∷ x) #) → unsafeCoerce# (# xor 0b11# tag, y #)} ;\
instance Swap (# (x ∷ K X) | (##) #) (# (##) | x #) where {\
  swap x = case unsafeCoerce# x of (# tag, (y ∷ x) #) → unsafeCoerce# (# xor 0b11# tag, y #) } ;\
instance Swap (# (x ∷ K X) | x #) (# x | x #) where {\
  swap x = case unsafeCoerce# x of (# tag, (y ∷ x) #) → unsafeCoerce# (# xor 0b11# tag, y #) } ;\

INST_SWAP(I)
INST_SWAP2(I,I8)
INST_SWAP2(I,I16)
INST_SWAP2(I,I32)
INST_SWAP2(I,I64)
INST_SWAP2(I,U)
INST_SWAP2(I,U8)
INST_SWAP2(I,U16)
INST_SWAP2(I,U32)
INST_SWAP2(I,U64)
INST_SWAP2(I,F32)
INST_SWAP2(I,F64)
INST_SWAP2(I,(##))
INST_SWAP2(I,())
INST_SWAP2(I,Addr#)
INST_SWAP2(I,ByteArray#)

INST_SWAP(I8)
INST_SWAP2(I8,I16)
INST_SWAP2(I8,I32)
INST_SWAP2(I8,I64)
INST_SWAP2(I8,U)
INST_SWAP2(I8,U8)
INST_SWAP2(I8,U16)
INST_SWAP2(I8,U32)
INST_SWAP2(I8,U64)
INST_SWAP2(I8,F32)
INST_SWAP2(I8,F64)
INST_SWAP2(I8,(##))
INST_SWAP2(I8,())
INST_SWAP2(I8,Addr#)
INST_SWAP2(I8,ByteArray#)

INST_SWAP(I16)
INST_SWAP2(I16,I32)
INST_SWAP2(I16,I64)
INST_SWAP2(I16,U)
INST_SWAP2(I16,U8)
INST_SWAP2(I16,U16)
INST_SWAP2(I16,U32)
INST_SWAP2(I16,U64)
INST_SWAP2(I16,F32)
INST_SWAP2(I16,F64)
INST_SWAP2(I16,(##))
INST_SWAP2(I16,())
INST_SWAP2(I16,Addr#)
INST_SWAP2(I16,ByteArray#)

INST_SWAP(I32)
INST_SWAP2(I32,I64)
INST_SWAP2(I32,U)
INST_SWAP2(I32,U8)
INST_SWAP2(I32,U16)
INST_SWAP2(I32,U32)
INST_SWAP2(I32,U64)
INST_SWAP2(I32,F32)
INST_SWAP2(I32,F64)
INST_SWAP2(I32,(##))
INST_SWAP2(I32,())
INST_SWAP2(I32,Addr#)
INST_SWAP2(I32,ByteArray#)

INST_SWAP(I64)
INST_SWAP2(I64,U)
INST_SWAP2(I64,U8)
INST_SWAP2(I64,U16)
INST_SWAP2(I64,U32)
INST_SWAP2(I64,U64)
INST_SWAP2(I64,F32)
INST_SWAP2(I64,F64)
INST_SWAP2(I64,(##))
INST_SWAP2(I64,())
INST_SWAP2(I64,Addr#)
INST_SWAP2(I64,ByteArray#)

INST_SWAP(U)
INST_SWAP2(U,U8)
INST_SWAP2(U,U16)
INST_SWAP2(U,U32)
INST_SWAP2(U,U64)
INST_SWAP2(U,F32)
INST_SWAP2(U,F64)
INST_SWAP2(U,(##))
INST_SWAP2(U,())
INST_SWAP2(U,Addr#)
INST_SWAP2(U,ByteArray#)

INST_SWAP(U8)
INST_SWAP2(U8,U16)
INST_SWAP2(U8,U32)
INST_SWAP2(U8,U64)
INST_SWAP2(U8,F32)
INST_SWAP2(U8,F64)
INST_SWAP2(U8,(##))
INST_SWAP2(U8,())
INST_SWAP2(U8,Addr#)
INST_SWAP2(U8,ByteArray#)

INST_SWAP(U16)
INST_SWAP2(U16,U32)
INST_SWAP2(U16,U64)
INST_SWAP2(U16,F32)
INST_SWAP2(U16,F64)
INST_SWAP2(U16,(##))
INST_SWAP2(U16,())
INST_SWAP2(U16,Addr#)
INST_SWAP2(U16,ByteArray#)

INST_SWAP(U32)
INST_SWAP2(U32,U64)
INST_SWAP2(U32,F32)
INST_SWAP2(U32,F64)
INST_SWAP2(U32,(##))
INST_SWAP2(U32,())
INST_SWAP2(U32,Addr#)
INST_SWAP2(U32,ByteArray#)

INST_SWAP(U64)
INST_SWAP2(U64,F32)
INST_SWAP2(U64,F64)
INST_SWAP2(U64,(##))
INST_SWAP2(U64,())
INST_SWAP2(U64,Addr#)
INST_SWAP2(U64,ByteArray#)

INST_SWAP(F32)
INST_SWAP2(F32,F64)
INST_SWAP2(F32,(##))
INST_SWAP2(F32,())
INST_SWAP2(F32,Addr#)
INST_SWAP2(F32,ByteArray#)

INST_SWAP(F64)
INST_SWAP2(F64,(##))
INST_SWAP2(F64,())
INST_SWAP2(F64,Addr#)
INST_SWAP2(F64,ByteArray#)

INST_SWAP((##))
INST_SWAP2((##),())
INST_SWAP2((##),Addr#)
INST_SWAP2((##),ByteArray#)

INST_SWAP(())
INST_SWAP2((),Addr#)
INST_SWAP2((),ByteArray#)

INST_SWAP(Addr#)
INST_SWAP2(Addr#,ByteArray#)

INST_SWAP(ByteArray#)

